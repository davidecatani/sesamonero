{
    "pipes": [
        {
            "name": "Nl2brPipe",
            "id": "pipe-Nl2brPipe-0c42b253f1df71d7d2b1847434be0012199b509dad5f11113959a3601d2d043d6027cd99cd4c9c3eeb472b8b0a9d97be3c3e65bd0fbba16f792e3e786b19c5e7",
            "file": "src/app/pipes/nl2br.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 7,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "nl2br",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'nl2br',\n})\nexport class Nl2brPipe implements PipeTransform {\n  transform(value: string): string {\n    return value.replace(/\\n/g, '<br/>');\n  }\n}\n"
        },
        {
            "name": "RemoveBracketsPipe",
            "id": "pipe-RemoveBracketsPipe-c559427645bf88ee530ffecb49b0b4f96d1b9a967c7fed196d882814b1e609e23ae0f74c5b2cde42da0844e420514762ef594dae866be7684e9a4d09c07f3413",
            "file": "src/app/pipes/removeBrackets.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 7,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "removeBrackets",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'removeBrackets',\n})\nexport class RemoveBracketsPipe implements PipeTransform {\n  transform(value: string): string {\n    return value.replace(/[\\(\\)']+/g, '');\n  }\n}\n"
        }
    ],
    "interfaces": [
        {
            "name": "AppState",
            "id": "interface-AppState-9ff279c7da5b056994039e758de393ae9d7921d0a681644562821253b51395bb1018d292a25c15ac4b721f2a2f6400e929ad7120dbcb4fd18721fca8b05e97f2",
            "file": "src/app/store/app.reducer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ActionReducerMap } from '@ngrx/store';\n\nimport * as fromRecipes from './recipes/recipe.reducer';\nimport * as fromAuth from './auth/auth.reducer';\nimport * as fromGeneral from './general/general.reducer';\n\nexport interface AppState {\n  general: fromGeneral.State;\n  recipes: fromRecipes.State;\n  token: fromAuth.State;\n}\n\nexport const appReducer: ActionReducerMap<AppState> = {\n  general: fromGeneral.generalReducer,\n  recipes: fromRecipes.recipeReducer,\n  token: fromAuth.authReducer,\n};\n",
            "properties": [
                {
                    "name": "general",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "fromGeneral.State",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "recipes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "fromRecipes.State",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "token",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "fromAuth.State",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Author",
            "id": "interface-Author-4d18565d2ad08f8f96a325c8b984abda799df4cc6126d8c8e5bd71d54ba3554bc4001b4ea7f1ca82ebc86299debf2869d93468aba0fc1a31e6ff2f5565030bef",
            "file": "src/app/models/recipe.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export class Recipe {\n  constructor(\n    public author: Author,\n    public category: string,\n    public cookingTime: string,\n    public date: string,\n    public difficulty: string,\n    public intro: string,\n    public portions: number,\n    public preparationTime: string,\n    public id: number,\n    public title: string,\n    public description: string,\n    public imageName: string,\n    public ingredients: Ingredient[]\n  ) {}\n}\n\nexport interface Author {\n  email: string;\n  id: string;\n  name: string;\n}\n\nexport interface Ingredient {\n  ingredient?: string;\n  quantity?: string;\n  unityOfMeasure?: string;\n  note?: string;\n}\n",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AuthResponseData",
            "id": "interface-AuthResponseData-d107a4c0378a9579bef2c4d4952e65db2e0e4458c813345a65cf58d5da972f716b212801be8ba9ef158df1ccb916d74abe60af2f6ebf49d5c3ff8d75fd713a44",
            "file": "src/app/store/recipes/recipe.effects.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { map, switchMap, withLatestFrom } from 'rxjs/operators';\nimport { getAuth, signInAnonymously } from 'firebase/auth';\nimport { of, from } from 'rxjs';\n\nimport { Recipe } from '../../models/recipe.model';\nimport * as RecipesActions from './recipe.actions';\nimport * as fromApp from '../app.reducer';\n\nimport * as firebase from 'firebase/app';\nimport { environment } from 'src/environments/environment';\nfirebase.initializeApp(environment.firebase);\n\nexport interface AuthResponseData {\n  kind?: string;\n  idToken: string;\n  email: string;\n  refreshToken: string;\n  expiresIn: string;\n  localId: string;\n  registered?: boolean;\n}\n\nconst baseApi =\n  'https://ng-course-recipe-book-a8fae-default-rtdb.firebaseio.com';\nenum errorMessages {\n  EMAIL_EXISTS = 'The email address is already in use by another account',\n  OPERATION_NOT_ALLOWED = 'Password sign-in is disabled for this project',\n  TOO_MANY_ATTEMPTS_TRY_LATER = 'We have blocked all requests from this device due to unusual activity. Try again later',\n  EMAIL_NOT_FOUND = 'There is no user record corresponding to this identifier.The user may have been deleted',\n  INVALID_PASSWORD = 'The password is invalid or the user does not have a password',\n  USER_DISABLED = 'The user account has been disabled by an administrator',\n}\nconst handleError = (errorRes: any) => {\n  let errorMessage = Boolean(errorMessages[errorRes.error.error.message])\n    ? errorMessages[errorRes.error.error.message]\n    : 'An unknown error occurred!';\n  return of(new RecipesActions.AuthenticateFail(errorMessage));\n};\n\n@Injectable()\nexport class RecipeEffects {\n  fetchRecipes$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(RecipesActions.FETCH_RECIPES),\n      switchMap(() => {\n        return this.http.get<Recipe[]>(`${baseApi}/recipes.json`);\n      }),\n      map((recipes) => {\n        return recipes.map((recipe) => {\n          return {\n            ...recipe,\n            ingredients: recipe.ingredients ? recipe.ingredients : [],\n          };\n        });\n      }),\n      map((recipes) => {\n        return new RecipesActions.SetRecipes(recipes);\n      })\n    );\n  });\n\n  storeRecipes$ = createEffect(\n    () => {\n      return this.actions$.pipe(\n        ofType(RecipesActions.STORE_RECIPES),\n        withLatestFrom(this.store.select('recipes')),\n        switchMap(([actionData, recipesState]) => {\n          return this.http.put(`${baseApi}/recipes.json`, recipesState.recipes);\n        })\n      );\n    },\n    { dispatch: false }\n  );\n\n  authLogin$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(RecipesActions.ANONYMOUS_LOGIN),\n      switchMap((authData: RecipesActions.AnonymousLogin) => {\n        const auth = getAuth();\n        return from(signInAnonymously(auth));\n      }),\n      switchMap((resData) => {\n        return from(resData.user.getIdToken());\n      }),\n      map((token) => {\n        return new RecipesActions.SetToken(token);\n      })\n    );\n  });\n\n  constructor(\n    private actions$: Actions,\n    private http: HttpClient,\n    private store: Store<fromApp.AppState>\n  ) {}\n}\n",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "expiresIn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "idToken",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "kind",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "localId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "refreshToken",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "registered",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 24
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Ingredient",
            "id": "interface-Ingredient-4d18565d2ad08f8f96a325c8b984abda799df4cc6126d8c8e5bd71d54ba3554bc4001b4ea7f1ca82ebc86299debf2869d93468aba0fc1a31e6ff2f5565030bef",
            "file": "src/app/models/recipe.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export class Recipe {\n  constructor(\n    public author: Author,\n    public category: string,\n    public cookingTime: string,\n    public date: string,\n    public difficulty: string,\n    public intro: string,\n    public portions: number,\n    public preparationTime: string,\n    public id: number,\n    public title: string,\n    public description: string,\n    public imageName: string,\n    public ingredients: Ingredient[]\n  ) {}\n}\n\nexport interface Author {\n  email: string;\n  id: string;\n  name: string;\n}\n\nexport interface Ingredient {\n  ingredient?: string;\n  quantity?: string;\n  unityOfMeasure?: string;\n  note?: string;\n}\n",
            "properties": [
                {
                    "name": "ingredient",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "note",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "quantity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "unityOfMeasure",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 28
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "State",
            "id": "interface-State-64af0d7626750e241f2b49f8b7eb61a00851d29dc875c28cff6a55f2de834dad7c66a4f89eb26697b27e2a789b7caf46f138bfc28fd562113c8d984be3684d0e",
            "file": "src/app/store/auth/auth.reducer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import * as RecipesActions from '../recipes/recipe.actions';\n\nexport interface State {\n  token: string;\n}\n\nconst initialState: State = {\n  token: null,\n};\n\nexport function authReducer(\n  state = initialState,\n  action: RecipesActions.RecipesActions\n): State {\n  switch (action.type) {\n    case RecipesActions.SET_TOKEN:\n      return {\n        ...state,\n        token: action.payload,\n      };\n    default:\n      return { ...state };\n  }\n}\n",
            "properties": [
                {
                    "name": "token",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "State",
            "id": "interface-State-ed0468bfd0db260af4e1b49ea168c40af0187dcc4db8f851a07b7b9303aa780637dc85f44631270924f8a92f044d6ffac4c79aacd963328ab709c5b433cca435-1",
            "file": "src/app/store/general/general.reducer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import * as GeneralActions from './general.actions';\n\nexport interface State {\n  currentPage: number;\n  currentSearch: string;\n  currentCategory: string;\n}\n\nconst initialState: State = {\n  currentPage: null,\n  currentSearch: '',\n  currentCategory: '',\n};\n\nexport function generalReducer(\n  state = initialState,\n  action: GeneralActions.GeneralActions\n): State {\n  // console.log(action);\n  switch (action.type) {\n    case GeneralActions.SET_PAGE:\n      return {\n        ...state,\n        currentPage: action.payload,\n      };\n    case GeneralActions.SET_CURRENT_SEARCH:\n      return {\n        ...state,\n        currentSearch: action.payload,\n      };\n    case GeneralActions.SET_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.payload,\n      };\n    default:\n      return { ...state };\n  }\n}\n",
            "properties": [
                {
                    "name": "currentCategory",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "currentPage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "currentSearch",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "State-1"
        },
        {
            "name": "State",
            "id": "interface-State-cb2ffa8439ca8a816062c7294bad5d7ba7286d38eea48f50c5b1bcc2c46c02f338536eff312d7037a9338303402e37f18b8e219cb19f2a23e2faa8a463c208c5-2",
            "file": "src/app/store/recipes/recipe.reducer.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Recipe } from '../../models/recipe.model';\nimport * as RecipesActions from './recipe.actions';\n\nexport interface State {\n  recipes: Recipe[];\n}\n\nconst initialState: State = {\n  recipes: [],\n};\n\nexport function recipeReducer(\n  state = initialState,\n  action: RecipesActions.RecipesActions\n): State {\n  switch (action.type) {\n    case RecipesActions.SET_RECIPES:\n      return {\n        ...state,\n        recipes: [...action.payload],\n      };\n    default:\n      return { ...state };\n  }\n}\n",
            "properties": [
                {
                    "name": "recipes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Recipe[]",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "State-2"
        },
        {
            "name": "User",
            "id": "interface-User-9c7e5f1bbbab702cb032307d130876cb68969b0cd4eedef32a0c8cad8081a54e5f8f577ed6ad4539c1b99a1d246cb34031d198c2ea8eba440e64e91b14f01fdc",
            "file": "src/stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "RecipeEffects",
            "id": "injectable-RecipeEffects-d107a4c0378a9579bef2c4d4952e65db2e0e4458c813345a65cf58d5da972f716b212801be8ba9ef158df1ccb916d74abe60af2f6ebf49d5c3ff8d75fd713a44",
            "file": "src/app/store/recipes/recipe.effects.ts",
            "properties": [
                {
                    "name": "authLogin$",
                    "defaultValue": "createEffect(() => {\n    return this.actions$.pipe(\n      ofType(RecipesActions.ANONYMOUS_LOGIN),\n      switchMap((authData: RecipesActions.AnonymousLogin) => {\n        const auth = getAuth();\n        return from(signInAnonymously(auth));\n      }),\n      switchMap((resData) => {\n        return from(resData.user.getIdToken());\n      }),\n      map((token) => {\n        return new RecipesActions.SetToken(token);\n      })\n    );\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 79
                },
                {
                    "name": "fetchRecipes$",
                    "defaultValue": "createEffect(() => {\n    return this.actions$.pipe(\n      ofType(RecipesActions.FETCH_RECIPES),\n      switchMap(() => {\n        return this.http.get<Recipe[]>(`${baseApi}/recipes.json`);\n      }),\n      map((recipes) => {\n        return recipes.map((recipe) => {\n          return {\n            ...recipe,\n            ingredients: recipe.ingredients ? recipe.ingredients : [],\n          };\n        });\n      }),\n      map((recipes) => {\n        return new RecipesActions.SetRecipes(recipes);\n      })\n    );\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "storeRecipes$",
                    "defaultValue": "createEffect(\n    () => {\n      return this.actions$.pipe(\n        ofType(RecipesActions.STORE_RECIPES),\n        withLatestFrom(this.store.select('recipes')),\n        switchMap(([actionData, recipesState]) => {\n          return this.http.put(`${baseApi}/recipes.json`, recipesState.recipes);\n        })\n      );\n    },\n    { dispatch: false }\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 66
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { Store } from '@ngrx/store';\nimport { map, switchMap, withLatestFrom } from 'rxjs/operators';\nimport { getAuth, signInAnonymously } from 'firebase/auth';\nimport { of, from } from 'rxjs';\n\nimport { Recipe } from '../../models/recipe.model';\nimport * as RecipesActions from './recipe.actions';\nimport * as fromApp from '../app.reducer';\n\nimport * as firebase from 'firebase/app';\nimport { environment } from 'src/environments/environment';\nfirebase.initializeApp(environment.firebase);\n\nexport interface AuthResponseData {\n  kind?: string;\n  idToken: string;\n  email: string;\n  refreshToken: string;\n  expiresIn: string;\n  localId: string;\n  registered?: boolean;\n}\n\nconst baseApi =\n  'https://ng-course-recipe-book-a8fae-default-rtdb.firebaseio.com';\nenum errorMessages {\n  EMAIL_EXISTS = 'The email address is already in use by another account',\n  OPERATION_NOT_ALLOWED = 'Password sign-in is disabled for this project',\n  TOO_MANY_ATTEMPTS_TRY_LATER = 'We have blocked all requests from this device due to unusual activity. Try again later',\n  EMAIL_NOT_FOUND = 'There is no user record corresponding to this identifier.The user may have been deleted',\n  INVALID_PASSWORD = 'The password is invalid or the user does not have a password',\n  USER_DISABLED = 'The user account has been disabled by an administrator',\n}\nconst handleError = (errorRes: any) => {\n  let errorMessage = Boolean(errorMessages[errorRes.error.error.message])\n    ? errorMessages[errorRes.error.error.message]\n    : 'An unknown error occurred!';\n  return of(new RecipesActions.AuthenticateFail(errorMessage));\n};\n\n@Injectable()\nexport class RecipeEffects {\n  fetchRecipes$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(RecipesActions.FETCH_RECIPES),\n      switchMap(() => {\n        return this.http.get<Recipe[]>(`${baseApi}/recipes.json`);\n      }),\n      map((recipes) => {\n        return recipes.map((recipe) => {\n          return {\n            ...recipe,\n            ingredients: recipe.ingredients ? recipe.ingredients : [],\n          };\n        });\n      }),\n      map((recipes) => {\n        return new RecipesActions.SetRecipes(recipes);\n      })\n    );\n  });\n\n  storeRecipes$ = createEffect(\n    () => {\n      return this.actions$.pipe(\n        ofType(RecipesActions.STORE_RECIPES),\n        withLatestFrom(this.store.select('recipes')),\n        switchMap(([actionData, recipesState]) => {\n          return this.http.put(`${baseApi}/recipes.json`, recipesState.recipes);\n        })\n      );\n    },\n    { dispatch: false }\n  );\n\n  authLogin$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(RecipesActions.ANONYMOUS_LOGIN),\n      switchMap((authData: RecipesActions.AnonymousLogin) => {\n        const auth = getAuth();\n        return from(signInAnonymously(auth));\n      }),\n      switchMap((resData) => {\n        return from(resData.user.getIdToken());\n      }),\n      map((token) => {\n        return new RecipesActions.SetToken(token);\n      })\n    );\n  });\n\n  constructor(\n    private actions$: Actions,\n    private http: HttpClient,\n    private store: Store<fromApp.AppState>\n  ) {}\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store<fromApp.AppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 93,
                "jsdoctags": [
                    {
                        "name": "actions$",
                        "type": "Actions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store<fromApp.AppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "RecipesService",
            "id": "injectable-RecipesService-be03bcfe947397798189046dcdfd239e7e230b1e3d0543cc8a7b949fdc3162f8f353c2d13355758535a23a9e0ccaca33b2fdb15bcb5a126573f2909a504cf1b7",
            "file": "src/app/services/recipes.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RecipesService {\n\nconstructor() { }\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 6
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [
        {
            "name": "AuthInterceptorService",
            "id": "injectable-AuthInterceptorService-055b08eb84193fd819351e39357b2b8778daf0bd089b1cd4e58cdddec8d28878d5db9ef21b18dc4c171543b3d52d5ba0cfd876648544852cee7855bfa114e965",
            "file": "src/app/services/app-interceptor.service.ts",
            "properties": [
                {
                    "name": "token",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "addTokenToHeader",
                    "args": [
                        {
                            "name": "request",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "HttpRequest<any>",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "request",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "intercept",
                    "args": [
                        {
                            "name": "request",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<HttpEvent<any>>",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "request",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpParams,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { exhaustMap, map, take, filter } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\n\nimport * as fromApp from '../store/app.reducer';\n\n@Injectable()\nexport class AuthInterceptorService implements HttpInterceptor {\n  private token: string;\n\n  constructor(private store: Store<fromApp.AppState>) {}\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    return this.store.select('token').pipe(\n      map((store) => {\n        return store.token;\n      }),\n      filter((token) => !!token),\n      exhaustMap((token) => {\n        this.token = token;\n        if (token != null) {\n          request = this.addTokenToHeader(request);\n          return next.handle(request);\n        }\n        return next.handle(request);\n      })\n    );\n  }\n\n  addTokenToHeader(request: HttpRequest<any>): HttpRequest<any> {\n    const token = this.token;\n    request = request.clone({\n      params: new HttpParams().set('auth', token),\n    });\n    return request;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<fromApp.AppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<fromApp.AppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "interceptor"
        }
    ],
    "classes": [
        {
            "name": "AnonymousLogin",
            "id": "class-AnonymousLogin-0b566b2b08e9de95506d12e1013e57ad3b6bf2243cc20d716f4fece3e732ce38d30294a2d09004d07b4fddcf2aa7e7acda1d44c5ef1b766e130fc8dff393ad22",
            "file": "src/app/store/recipes/recipe.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Action } from '@ngrx/store';\n\nimport { Recipe } from '../../models/recipe.model';\n\nexport const SET_RECIPES = '[Recipes] Set Recipes';\nexport const FETCH_RECIPES = '[Recipes] Fetch Recipes';\nexport const STORE_RECIPES = '[Recipes] Store Recipes';\nexport const ADD_RECIPE = '[Recipes] Add Recipe';\nexport const UPDATE_RECIPE = '[Recipes] Update Recipe';\nexport const DELETE_RECIPE = '[Recipes] Delete Recipe';\nexport const ANONYMOUS_LOGIN = '[Recipes] Anonymous Login';\nexport const AUTHENTICATE_FAIL = '[Recipes] Authenticate Fail';\nexport const SET_TOKEN = '[Recipes] Set Token';\n\nexport class SetRecipes implements Action {\n  readonly type = SET_RECIPES;\n\n  constructor(public payload: Recipe[]) {}\n}\nexport class SetToken implements Action {\n  readonly type = SET_TOKEN;\n\n  constructor(public payload: string) {}\n}\n\nexport class FetchRecipes implements Action {\n  readonly type = FETCH_RECIPES;\n}\n\nexport class AnonymousLogin implements Action {\n  readonly type = ANONYMOUS_LOGIN;\n}\nexport class AuthenticateFail implements Action {\n  readonly type = AUTHENTICATE_FAIL;\n\n  constructor(public payload: string) {}\n}\n\n// export class StoreRecipes implements Action {\n//   readonly type = STORE_RECIPES;\n// }\n\n// export class AddRecipe implements Action {\n//   readonly type = ADD_RECIPE;\n\n//   constructor(public payload: Recipe) {}\n// }\n\n// export class UpdateRecipe implements Action {\n//   readonly type = UPDATE_RECIPE;\n\n//   constructor(public payload: { index: number; newRecipe: Recipe }) {}\n// }\n\n// export class DeleteRecipe implements Action {\n//   readonly type = DELETE_RECIPE;\n\n//   constructor(public payload: number) {}\n// }\n\nexport type RecipesActions =\n  | SetRecipes\n  | FetchRecipes\n  | AnonymousLogin\n  | AuthenticateFail\n  | SetToken;\n/*| AddRecipe\n  | UpdateRecipe;\n| DeleteRecipe*/\n",
            "properties": [
                {
                    "name": "type",
                    "defaultValue": "ANONYMOUS_LOGIN",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        144
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "AuthenticateFail",
            "id": "class-AuthenticateFail-0b566b2b08e9de95506d12e1013e57ad3b6bf2243cc20d716f4fece3e732ce38d30294a2d09004d07b4fddcf2aa7e7acda1d44c5ef1b766e130fc8dff393ad22",
            "file": "src/app/store/recipes/recipe.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Action } from '@ngrx/store';\n\nimport { Recipe } from '../../models/recipe.model';\n\nexport const SET_RECIPES = '[Recipes] Set Recipes';\nexport const FETCH_RECIPES = '[Recipes] Fetch Recipes';\nexport const STORE_RECIPES = '[Recipes] Store Recipes';\nexport const ADD_RECIPE = '[Recipes] Add Recipe';\nexport const UPDATE_RECIPE = '[Recipes] Update Recipe';\nexport const DELETE_RECIPE = '[Recipes] Delete Recipe';\nexport const ANONYMOUS_LOGIN = '[Recipes] Anonymous Login';\nexport const AUTHENTICATE_FAIL = '[Recipes] Authenticate Fail';\nexport const SET_TOKEN = '[Recipes] Set Token';\n\nexport class SetRecipes implements Action {\n  readonly type = SET_RECIPES;\n\n  constructor(public payload: Recipe[]) {}\n}\nexport class SetToken implements Action {\n  readonly type = SET_TOKEN;\n\n  constructor(public payload: string) {}\n}\n\nexport class FetchRecipes implements Action {\n  readonly type = FETCH_RECIPES;\n}\n\nexport class AnonymousLogin implements Action {\n  readonly type = ANONYMOUS_LOGIN;\n}\nexport class AuthenticateFail implements Action {\n  readonly type = AUTHENTICATE_FAIL;\n\n  constructor(public payload: string) {}\n}\n\n// export class StoreRecipes implements Action {\n//   readonly type = STORE_RECIPES;\n// }\n\n// export class AddRecipe implements Action {\n//   readonly type = ADD_RECIPE;\n\n//   constructor(public payload: Recipe) {}\n// }\n\n// export class UpdateRecipe implements Action {\n//   readonly type = UPDATE_RECIPE;\n\n//   constructor(public payload: { index: number; newRecipe: Recipe }) {}\n// }\n\n// export class DeleteRecipe implements Action {\n//   readonly type = DELETE_RECIPE;\n\n//   constructor(public payload: number) {}\n// }\n\nexport type RecipesActions =\n  | SetRecipes\n  | FetchRecipes\n  | AnonymousLogin\n  | AuthenticateFail\n  | SetToken;\n/*| AddRecipe\n  | UpdateRecipe;\n| DeleteRecipe*/\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 34,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "AUTHENTICATE_FAIL",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        144
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "FetchRecipes",
            "id": "class-FetchRecipes-0b566b2b08e9de95506d12e1013e57ad3b6bf2243cc20d716f4fece3e732ce38d30294a2d09004d07b4fddcf2aa7e7acda1d44c5ef1b766e130fc8dff393ad22",
            "file": "src/app/store/recipes/recipe.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Action } from '@ngrx/store';\n\nimport { Recipe } from '../../models/recipe.model';\n\nexport const SET_RECIPES = '[Recipes] Set Recipes';\nexport const FETCH_RECIPES = '[Recipes] Fetch Recipes';\nexport const STORE_RECIPES = '[Recipes] Store Recipes';\nexport const ADD_RECIPE = '[Recipes] Add Recipe';\nexport const UPDATE_RECIPE = '[Recipes] Update Recipe';\nexport const DELETE_RECIPE = '[Recipes] Delete Recipe';\nexport const ANONYMOUS_LOGIN = '[Recipes] Anonymous Login';\nexport const AUTHENTICATE_FAIL = '[Recipes] Authenticate Fail';\nexport const SET_TOKEN = '[Recipes] Set Token';\n\nexport class SetRecipes implements Action {\n  readonly type = SET_RECIPES;\n\n  constructor(public payload: Recipe[]) {}\n}\nexport class SetToken implements Action {\n  readonly type = SET_TOKEN;\n\n  constructor(public payload: string) {}\n}\n\nexport class FetchRecipes implements Action {\n  readonly type = FETCH_RECIPES;\n}\n\nexport class AnonymousLogin implements Action {\n  readonly type = ANONYMOUS_LOGIN;\n}\nexport class AuthenticateFail implements Action {\n  readonly type = AUTHENTICATE_FAIL;\n\n  constructor(public payload: string) {}\n}\n\n// export class StoreRecipes implements Action {\n//   readonly type = STORE_RECIPES;\n// }\n\n// export class AddRecipe implements Action {\n//   readonly type = ADD_RECIPE;\n\n//   constructor(public payload: Recipe) {}\n// }\n\n// export class UpdateRecipe implements Action {\n//   readonly type = UPDATE_RECIPE;\n\n//   constructor(public payload: { index: number; newRecipe: Recipe }) {}\n// }\n\n// export class DeleteRecipe implements Action {\n//   readonly type = DELETE_RECIPE;\n\n//   constructor(public payload: number) {}\n// }\n\nexport type RecipesActions =\n  | SetRecipes\n  | FetchRecipes\n  | AnonymousLogin\n  | AuthenticateFail\n  | SetToken;\n/*| AddRecipe\n  | UpdateRecipe;\n| DeleteRecipe*/\n",
            "properties": [
                {
                    "name": "type",
                    "defaultValue": "FETCH_RECIPES",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        144
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "FileUpload",
            "id": "class-FileUpload-bce1ad17355ab92902c2784eb70747bfa4c201dcb518fd66f67b0c18e2f4a05c618e5d2fff2adfd93e97d55832d56385339e1204734e9abe626393871581099f",
            "file": "src/app/models/file-upload.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class FileUpload {\n  key!: string;\n  name!: string;\n  url!: string;\n  file: File;\n  constructor(file: File) {\n    this.file = file;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "file",
                        "type": "File",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 5,
                "jsdoctags": [
                    {
                        "name": "file",
                        "type": "File",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "file",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "File",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "MockActivatedRoute",
            "id": "class-MockActivatedRoute-654ba3a9556b0b6186ecc3981f13775ef57544c57ad8f0447f1ab60d07a7fdaf7e11cbe7aa240647aaff9cb70227e0bd20a55a4e4f6223638f0826fcea094202",
            "file": "src/app/recipe-detail/recipe-detail.stories.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { ActivatedRoute } from '@angular/router';\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { StoreModule } from '@ngrx/store';\nimport { Meta, moduleMetadata, Story } from '@storybook/angular';\nimport { of } from 'rxjs';\nimport { Nl2brPipe } from '../pipes/nl2br.pipe';\nimport { RemoveBracketsPipe } from '../pipes/removeBrackets.pipe';\nimport * as fromApp from '../store/app.reducer';\n\nimport { RecipeDetailComponent } from './recipe-detail.component';\n\nexport default {\n  /* 👇 The title prop is optional.\n   * See https://storybook.js.org/docs/angular/configure/overview#configure-story-loading\n   * to learn how to generate automatic titles\n   */\n  title: 'RecipeDetailComponent',\n  component: RecipeDetailComponent,\n  decorators: [\n    moduleMetadata({\n      imports: [StoreModule.forRoot(fromApp.appReducer)],\n      declarations: [Nl2brPipe, RemoveBracketsPipe],\n      providers: [\n        {\n          provide: ActivatedRoute,\n          useValue: {\n            params: of({ id: 'cheese-cake' }),\n          },\n        },\n      ],\n    }),\n  ],\n} as Meta;\n\nclass MockActivatedRoute {\n  // here you can add your mock objects, like snapshot or parent or whatever\n  // example:\n  parent = {\n    snapshot: { data: { title: 'myTitle ' } },\n    routeConfig: { children: { filter: () => {} } },\n  };\n}\n\nexport const Default: Story = () => ({\n  props: {\n    label: 'RecipeDetailComponent',\n    imageName: 'Cheese_Cake.jpg',\n    recipe: {\n      author: {\n        email: 'dave.catani@gmail.com',\n        id: '1',\n        name: 'Davide Catani',\n      },\n      category: 'Frutta e dolci',\n      cookingTime: '30 minuti',\n      date: '2017-02-26 20:50:13',\n      description:\n        \"Sciogliere il burro in un pentolino.\\nTritare i biscotti e unire il tutto.\\nVersare in una teglia e formare una base compatta e uniforme.\\nFrullare il resto degli ingredienti e versarli sopra la base di biscotti.\\nCuocere in forno per mezz'ora circa a 180° finchè non diventa solida.\\nLasciar sfreddare e ricoprire di marmellata.\\n\",\n      difficulty: 'facile',\n      id: '240',\n      imageName: 'Cheese_Cake.jpg',\n      ingredients: [\n        {\n          ingredient: 'Mascarpone',\n          quantity: '250',\n          unityOfMeasure: 'gr',\n        },\n        {\n          ingredient: 'Ricotta',\n          quantity: '250',\n          unityOfMeasure: 'gr',\n        },\n        {\n          ingredient: 'Vanillina',\n          quantity: '1',\n          unityOfMeasure: 'bustina',\n        },\n        {\n          ingredient: 'Zucchero',\n          quantity: '80',\n          unityOfMeasure: 'gr',\n        },\n        {\n          ingredient: 'Uova',\n          quantity: '3',\n        },\n        {\n          ingredient: 'Marmellata',\n          note: 'preferibilmente rossa',\n          quantity: '1 e mezzo',\n          unityOfMeasure: 'barattolo',\n        },\n        {\n          ingredient: 'Biscotti',\n          note: 'Tipo Rigoli Mulino Bianco',\n          quantity: '240',\n          unityOfMeasure: 'gr',\n        },\n        {\n          ingredient: 'Farina',\n          quantity: '1/5',\n          unityOfMeasure: 'cucchiaio',\n        },\n        {\n          ingredient: 'Burro',\n          quantity: '125',\n          unityOfMeasure: 'gr',\n        },\n      ],\n      intro: 'Un dolce buonissimo, semplice e veloce da preparare.',\n      portions: '6',\n      preparationTime: '20 minuti',\n      title: 'Cheese cake',\n    },\n  },\n});\n",
            "properties": [
                {
                    "name": "parent",
                    "defaultValue": "{\n    snapshot: { data: { title: 'myTitle ' } },\n    routeConfig: { children: { filter: () => {} } },\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 38
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Recipe",
            "id": "class-Recipe-4d18565d2ad08f8f96a325c8b984abda799df4cc6126d8c8e5bd71d54ba3554bc4001b4ea7f1ca82ebc86299debf2869d93468aba0fc1a31e6ff2f5565030bef",
            "file": "src/app/models/recipe.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class Recipe {\n  constructor(\n    public author: Author,\n    public category: string,\n    public cookingTime: string,\n    public date: string,\n    public difficulty: string,\n    public intro: string,\n    public portions: number,\n    public preparationTime: string,\n    public id: number,\n    public title: string,\n    public description: string,\n    public imageName: string,\n    public ingredients: Ingredient[]\n  ) {}\n}\n\nexport interface Author {\n  email: string;\n  id: string;\n  name: string;\n}\n\nexport interface Ingredient {\n  ingredient?: string;\n  quantity?: string;\n  unityOfMeasure?: string;\n  note?: string;\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "author",
                        "type": "Author",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "category",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cookingTime",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "date",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "difficulty",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "intro",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "portions",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "preparationTime",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "id",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "title",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "description",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "imageName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "ingredients",
                        "type": "Ingredient[]",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 1,
                "jsdoctags": [
                    {
                        "name": "author",
                        "type": "Author",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "category",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cookingTime",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "date",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "difficulty",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "intro",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "portions",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "preparationTime",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "id",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "title",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "description",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "imageName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "ingredients",
                        "type": "Ingredient[]",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "author",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Author",
                    "optional": false,
                    "description": "",
                    "line": 3,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "category",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "cookingTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "difficulty",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "imageName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ingredients",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Ingredient[]",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "intro",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "portions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "preparationTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "SetCurrentCategory",
            "id": "class-SetCurrentCategory-dd19bdcbd0b4c24cd17b49b4f7800dea0e1c5988b20f0f9481617d89265d7cef8d14876fc961f0acd53b8f1e8006710440fba3d8839132dc19965fbcd9f55f37",
            "file": "src/app/store/general/general.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Action } from '@ngrx/store';\nexport const SET_PAGE = '[Recipes] Set Page';\nexport const SET_CURRENT_SEARCH = '[Recipes] Set Current Search';\nexport const SET_CURRENT_CATEGORY = '[Recipes] Set Current Category';\n\nexport class SetPage implements Action {\n  readonly type = SET_PAGE;\n\n  constructor(public payload: number) {}\n}\nexport class SetCurrentSearch implements Action {\n  readonly type = SET_CURRENT_SEARCH;\n\n  constructor(public payload: string) {}\n}\nexport class SetCurrentCategory implements Action {\n  readonly type = SET_CURRENT_CATEGORY;\n\n  constructor(public payload: string) {}\n}\n\nexport type GeneralActions = SetPage | SetCurrentSearch | SetCurrentCategory;\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "SET_CURRENT_CATEGORY",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        144
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "SetCurrentSearch",
            "id": "class-SetCurrentSearch-dd19bdcbd0b4c24cd17b49b4f7800dea0e1c5988b20f0f9481617d89265d7cef8d14876fc961f0acd53b8f1e8006710440fba3d8839132dc19965fbcd9f55f37",
            "file": "src/app/store/general/general.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Action } from '@ngrx/store';\nexport const SET_PAGE = '[Recipes] Set Page';\nexport const SET_CURRENT_SEARCH = '[Recipes] Set Current Search';\nexport const SET_CURRENT_CATEGORY = '[Recipes] Set Current Category';\n\nexport class SetPage implements Action {\n  readonly type = SET_PAGE;\n\n  constructor(public payload: number) {}\n}\nexport class SetCurrentSearch implements Action {\n  readonly type = SET_CURRENT_SEARCH;\n\n  constructor(public payload: string) {}\n}\nexport class SetCurrentCategory implements Action {\n  readonly type = SET_CURRENT_CATEGORY;\n\n  constructor(public payload: string) {}\n}\n\nexport type GeneralActions = SetPage | SetCurrentSearch | SetCurrentCategory;\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "SET_CURRENT_SEARCH",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        144
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "SetPage",
            "id": "class-SetPage-dd19bdcbd0b4c24cd17b49b4f7800dea0e1c5988b20f0f9481617d89265d7cef8d14876fc961f0acd53b8f1e8006710440fba3d8839132dc19965fbcd9f55f37",
            "file": "src/app/store/general/general.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Action } from '@ngrx/store';\nexport const SET_PAGE = '[Recipes] Set Page';\nexport const SET_CURRENT_SEARCH = '[Recipes] Set Current Search';\nexport const SET_CURRENT_CATEGORY = '[Recipes] Set Current Category';\n\nexport class SetPage implements Action {\n  readonly type = SET_PAGE;\n\n  constructor(public payload: number) {}\n}\nexport class SetCurrentSearch implements Action {\n  readonly type = SET_CURRENT_SEARCH;\n\n  constructor(public payload: string) {}\n}\nexport class SetCurrentCategory implements Action {\n  readonly type = SET_CURRENT_CATEGORY;\n\n  constructor(public payload: string) {}\n}\n\nexport type GeneralActions = SetPage | SetCurrentSearch | SetCurrentCategory;\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "SET_PAGE",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        144
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "SetRecipes",
            "id": "class-SetRecipes-0b566b2b08e9de95506d12e1013e57ad3b6bf2243cc20d716f4fece3e732ce38d30294a2d09004d07b4fddcf2aa7e7acda1d44c5ef1b766e130fc8dff393ad22",
            "file": "src/app/store/recipes/recipe.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Action } from '@ngrx/store';\n\nimport { Recipe } from '../../models/recipe.model';\n\nexport const SET_RECIPES = '[Recipes] Set Recipes';\nexport const FETCH_RECIPES = '[Recipes] Fetch Recipes';\nexport const STORE_RECIPES = '[Recipes] Store Recipes';\nexport const ADD_RECIPE = '[Recipes] Add Recipe';\nexport const UPDATE_RECIPE = '[Recipes] Update Recipe';\nexport const DELETE_RECIPE = '[Recipes] Delete Recipe';\nexport const ANONYMOUS_LOGIN = '[Recipes] Anonymous Login';\nexport const AUTHENTICATE_FAIL = '[Recipes] Authenticate Fail';\nexport const SET_TOKEN = '[Recipes] Set Token';\n\nexport class SetRecipes implements Action {\n  readonly type = SET_RECIPES;\n\n  constructor(public payload: Recipe[]) {}\n}\nexport class SetToken implements Action {\n  readonly type = SET_TOKEN;\n\n  constructor(public payload: string) {}\n}\n\nexport class FetchRecipes implements Action {\n  readonly type = FETCH_RECIPES;\n}\n\nexport class AnonymousLogin implements Action {\n  readonly type = ANONYMOUS_LOGIN;\n}\nexport class AuthenticateFail implements Action {\n  readonly type = AUTHENTICATE_FAIL;\n\n  constructor(public payload: string) {}\n}\n\n// export class StoreRecipes implements Action {\n//   readonly type = STORE_RECIPES;\n// }\n\n// export class AddRecipe implements Action {\n//   readonly type = ADD_RECIPE;\n\n//   constructor(public payload: Recipe) {}\n// }\n\n// export class UpdateRecipe implements Action {\n//   readonly type = UPDATE_RECIPE;\n\n//   constructor(public payload: { index: number; newRecipe: Recipe }) {}\n// }\n\n// export class DeleteRecipe implements Action {\n//   readonly type = DELETE_RECIPE;\n\n//   constructor(public payload: number) {}\n// }\n\nexport type RecipesActions =\n  | SetRecipes\n  | FetchRecipes\n  | AnonymousLogin\n  | AuthenticateFail\n  | SetToken;\n/*| AddRecipe\n  | UpdateRecipe;\n| DeleteRecipe*/\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "Recipe[]",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "Recipe[]",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Recipe[]",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "SET_RECIPES",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        144
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        },
        {
            "name": "SetToken",
            "id": "class-SetToken-0b566b2b08e9de95506d12e1013e57ad3b6bf2243cc20d716f4fece3e732ce38d30294a2d09004d07b4fddcf2aa7e7acda1d44c5ef1b766e130fc8dff393ad22",
            "file": "src/app/store/recipes/recipe.actions.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Action } from '@ngrx/store';\n\nimport { Recipe } from '../../models/recipe.model';\n\nexport const SET_RECIPES = '[Recipes] Set Recipes';\nexport const FETCH_RECIPES = '[Recipes] Fetch Recipes';\nexport const STORE_RECIPES = '[Recipes] Store Recipes';\nexport const ADD_RECIPE = '[Recipes] Add Recipe';\nexport const UPDATE_RECIPE = '[Recipes] Update Recipe';\nexport const DELETE_RECIPE = '[Recipes] Delete Recipe';\nexport const ANONYMOUS_LOGIN = '[Recipes] Anonymous Login';\nexport const AUTHENTICATE_FAIL = '[Recipes] Authenticate Fail';\nexport const SET_TOKEN = '[Recipes] Set Token';\n\nexport class SetRecipes implements Action {\n  readonly type = SET_RECIPES;\n\n  constructor(public payload: Recipe[]) {}\n}\nexport class SetToken implements Action {\n  readonly type = SET_TOKEN;\n\n  constructor(public payload: string) {}\n}\n\nexport class FetchRecipes implements Action {\n  readonly type = FETCH_RECIPES;\n}\n\nexport class AnonymousLogin implements Action {\n  readonly type = ANONYMOUS_LOGIN;\n}\nexport class AuthenticateFail implements Action {\n  readonly type = AUTHENTICATE_FAIL;\n\n  constructor(public payload: string) {}\n}\n\n// export class StoreRecipes implements Action {\n//   readonly type = STORE_RECIPES;\n// }\n\n// export class AddRecipe implements Action {\n//   readonly type = ADD_RECIPE;\n\n//   constructor(public payload: Recipe) {}\n// }\n\n// export class UpdateRecipe implements Action {\n//   readonly type = UPDATE_RECIPE;\n\n//   constructor(public payload: { index: number; newRecipe: Recipe }) {}\n// }\n\n// export class DeleteRecipe implements Action {\n//   readonly type = DELETE_RECIPE;\n\n//   constructor(public payload: number) {}\n// }\n\nexport type RecipesActions =\n  | SetRecipes\n  | FetchRecipes\n  | AnonymousLogin\n  | AuthenticateFail\n  | SetToken;\n/*| AddRecipe\n  | UpdateRecipe;\n| DeleteRecipe*/\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "payload",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "payload",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "payload",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "SET_TOKEN",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        144
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "implements": [
                "Action"
            ]
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-d9e6d9dac11215df2476fc61ba022ab1c83c2ce3d4603bd81e75e5a687f11d7ab23beab1e0870409e60ec7a6b06365c935da7ee1c4a6d45a98f786523fb2a659",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'sesamonero'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "resetSearch",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setUpAnalytics",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\n\nimport * as RecipesActions from './store/recipes/recipe.actions';\nimport * as GeneralActions from './store/general/general.actions';\nimport * as fromApp from './store/app.reducer';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { filter } from 'rxjs';\n\ndeclare let gtag: Function;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  title = 'sesamonero';\n\n  constructor(private store: Store<fromApp.AppState>, private router: Router) {}\n  ngOnInit(): void {\n    this.setUpAnalytics();\n    this.store.dispatch(new RecipesActions.AnonymousLogin());\n    this.store.dispatch(new RecipesActions.FetchRecipes());\n  }\n\n  resetSearch() {\n    this.store.dispatch(new GeneralActions.SetCurrentCategory(''));\n    this.store.dispatch(new GeneralActions.SetCurrentSearch(''));\n    this.store.dispatch(new GeneralActions.SetPage(1));\n  }\n\n  setUpAnalytics() {\n    this.router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe((event: NavigationEnd) => {\n        gtag('config', 'UA-75609499-1', {\n          page_path: event.urlAfterRedirects,\n        });\n      });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store<fromApp.AppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store<fromApp.AppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container main-container\">\n  <div class=\"row my-5\">\n    <div class=\"col-12\">\n      <a [routerLink]=\"['/']\" class=\"logo\" (click)=\"resetSearch()\">\n        <img src=\"../assets/logo.png\" [alt]=\"'Home'\" />\n      </a>\n    </div>\n  </div>\n  <router-outlet></router-outlet>\n</div>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-4ef205c97a334c309aa4001c8ab4a6d9571dcae18d0e85aaf0d367467ab5d3a9f13ab3573726f1fcb409bc9b49894dadfb80b1bbe1b6ba7041455ad9d4922004",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 711,
                            "end": 724,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 712,
                                "end": 720,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-a557eec14f72c438a8033301f4d6ce023e0a1844a3b06ec2b38794a612acc31735ae78a5ee10071b230c8c20d699eb914554e69d07ade54adb371da8efb464cc",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n\n.welcome {\n  color: #333;\n  font-size: 14px;\n  margin-right: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-7126d8c2607c946741c651482413b43feb72b2d63cac9d3ac173fde206a5e635eb4cdbf7ca7ac9327c7d4d05cf7ef619144c34c11609ad677081d0ee4e855064",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 64
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nsection h2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nsection p {\n  margin: 1em 0;\n}\n\nsection a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nsection ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nsection li {\n  margin-bottom: 8px;\n}\n\nsection .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\nsection .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\nsection .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\nsection .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "RecipeDetailComponent",
            "id": "component-RecipeDetailComponent-bef971e1289f6079c9c30d03c2f82216d3b28ff5393bc41fb865016f79b3f3db7ce83d58df1651fd4f9caa037afc433d6c7d550398741ab012f78ce9df693de2",
            "file": "src/app/recipe-detail/recipe-detail.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-recipe-detail",
            "styleUrls": [
                "./recipe-detail.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./recipe-detail.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "imageName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "currentCategory",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "imageSrc",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "recipe",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Recipe",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "subs",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription[]",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "back",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Subscription } from 'rxjs';\nimport { filter, map, switchMap } from 'rxjs/operators';\nimport { Meta, Title } from '@angular/platform-browser';\nimport { environment } from '../../environments/environment';\n\nimport { Recipe } from '../models/recipe.model';\nimport * as fromApp from '../store/app.reducer';\nimport { getRemoteImages, slugify } from '../utils';\n\n@Component({\n  selector: 'app-recipe-detail',\n  templateUrl: './recipe-detail.component.html',\n  styleUrls: ['./recipe-detail.component.scss'],\n})\nexport class RecipeDetailComponent implements OnInit, OnDestroy {\n  @Input() imageName: string;\n  public recipe: Recipe;\n  public id: string;\n  public imageSrc: string;\n  public currentCategory: string;\n  private subs: Subscription[] = [];\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private store: Store<fromApp.AppState>,\n    private meta: Meta,\n    private titleService: Title\n  ) {\n    this.imageSrc = '';\n  }\n\n  ngOnInit() {\n    if (this.imageName) {\n      // this.imageSrc = getRemoteImages(this.imageName);\n    }\n    this.subs = [\n      ...this.subs,\n      this.store.select('general').subscribe((data) => {\n        this.currentCategory = data.currentCategory ? data.currentCategory : '';\n      }),\n      this.route.params\n        .pipe(\n          map((params) => {\n            return params['id'];\n          }),\n          switchMap((id) => {\n            this.id = id ? id : '1';\n            return this.store.select('recipes');\n          }),\n          map((recipeState) => {\n            return recipeState.recipes.find(\n              (recipe) => slugify(recipe.title) === this.id\n            );\n          }),\n          filter((recipe) => {\n            return Boolean(recipe);\n          })\n        )\n        .subscribe((recipe) => {\n          this.recipe = recipe;\n          if (recipe.title) {\n            this.imageSrc = getRemoteImages(this.recipe.imageName);\n            this.titleService.setTitle(`${this.recipe.title} | Sesamonero`);\n            this.meta.addTags([\n              { name: 'description', content: this.recipe.intro },\n              { name: 'og:site_name', content: 'Sesamonero' },\n              { name: 'og:type', content: 'food' },\n              {\n                name: 'og:url',\n                content: `${environment.siteDomain}/it/ricette/${slugify(\n                  this.currentCategory\n                )}/${slugify(this.recipe.title)}`,\n              },\n              { name: 'og:title', content: this.recipe.title },\n              { name: 'og:description', content: this.recipe.description },\n              {\n                name: 'og:image',\n                content: `${this.imageSrc}`,\n              },\n              {\n                name: 'og:updated_time',\n                content: this.recipe.date,\n              },\n            ]);\n          }\n        }),\n    ];\n  }\n  back(): void {\n    this.router.navigate([`/it/ricette/${slugify(this.currentCategory)}`]);\n  }\n  ngOnDestroy() {\n    this.subs.forEach((sub) => sub.unsubscribe());\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./recipe-detail.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store<fromApp.AppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "meta",
                        "type": "Meta",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "titleService",
                        "type": "Title",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 24,
                "jsdoctags": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store<fromApp.AppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "meta",
                        "type": "Meta",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "titleService",
                        "type": "Title",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<div class=\"row\">\n  <div class=\"col-12 mb-3\">\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"back()\">\n      &#8249; Indietro\n    </button>\n  </div>\n</div>\n<ng-container *ngIf=\"!!recipe\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <h1>{{ recipe.title }}</h1>\n    </div>\n  </div>\n  <div class=\"row mb-4\">\n    <div class=\"col-12\">\n      <ul class=\"generic-info-list list-group list-group-horizontal\">\n        <li\n          class=\"\n            list-group-item\n            d-flex\n            justify-content-between\n            align-items-center\n          \"\n          *ngIf=\"recipe.difficulty\"\n        >\n          Difficoltà\n          <span class=\"badge badge-secondary ml-2 badge-pill\">{{\n            recipe.difficulty\n          }}</span>\n        </li>\n        <li\n          class=\"\n            list-group-item\n            d-flex\n            justify-content-between\n            align-items-center\n          \"\n          *ngIf=\"recipe.preparationTime\"\n        >\n          Tempo di preparazione\n          <span class=\"badge badge-secondary ml-2 badge-pill\">{{\n            recipe.preparationTime\n          }}</span>\n        </li>\n        <li\n          class=\"\n            list-group-item\n            d-flex\n            justify-content-between\n            align-items-center\n          \"\n          *ngIf=\"recipe.cookingTime\"\n        >\n          Tempo di cottura\n          <span class=\"badge badge-secondary ml-2 badge-pill\">{{\n            recipe.cookingTime\n          }}</span>\n        </li>\n        <li\n          class=\"\n            list-group-item\n            d-flex\n            justify-content-between\n            align-items-center\n          \"\n          *ngIf=\"recipe.portions\"\n        >\n          Porzioni\n          <span class=\"badge badge-secondary ml-2 badge-pill\">{{\n            recipe.portions\n          }}</span>\n        </li>\n      </ul>\n    </div>\n  </div>\n  <div class=\"row flex-column-reverse flex-sm-row mb-3\">\n    <div class=\"col-12 col-sm-6\">\n      <h2>Ingredienti</h2>\n      <ul class=\"list-group-flush p-0\">\n        <li\n          class=\"list-group-item pl-0 d-flex align-items-center\"\n          *ngFor=\"let ingredient of recipe.ingredients\"\n        >\n          {{ ingredient.ingredient }}\n          {{ ingredient.quantity }} {{ ingredient.unityOfMeasure }}\n          <ng-container *ngIf=\"ingredient.note\"\n            >({{ ingredient.note | removeBrackets }})</ng-container\n          >\n        </li>\n      </ul>\n    </div>\n    <div class=\"col-12 col-sm-6 mb-3 mb-sm-0\">\n      <img [src]=\"imageSrc\" alt=\"{{ recipe.title }}\" class=\"img-fluid\" />\n    </div>\n  </div>\n  <div class=\"row mb-3\" *ngIf=\"recipe.intro\">\n    <div class=\"col-12\">\n      {{ recipe.intro }}\n    </div>\n  </div>\n  <div class=\"row mb-3\">\n    <div class=\"col-12\">\n      <h2>Preparazione</h2>\n      <p [innerHTML]=\"recipe.description | nl2br\"></p>\n    </div>\n  </div>\n</ng-container>\n"
        },
        {
            "name": "RecipeItemComponent",
            "id": "component-RecipeItemComponent-63b1c4a24a1c72a2640638be68b9a7f51fe38d0a6f94279079b7b0ebec928b7b6720e799816752a4d3678a92c9cbbbff221000c02d158858628b80819ac98b66",
            "file": "src/app/recipe-item/recipe-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-recipe-item",
            "styleUrls": [
                "./recipe-item.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./recipe-item.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "recipe",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "Recipe",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "detailUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "imageSrc",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "imageUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\n\nimport { Recipe } from '../models/recipe.model';\nimport { getRemoteImages, slugify } from '../utils';\n@Component({\n  selector: 'app-recipe-item',\n  templateUrl: './recipe-item.component.html',\n  styleUrls: ['./recipe-item.component.scss'],\n  host: { class: ' col-12 col-sm-4 col-lg-3 d-flex' },\n})\nexport class RecipeItemComponent implements OnInit {\n  @Input() recipe: Recipe;\n\n  public imageUrl: string;\n  public imageSrc: string;\n  public detailUrl: string;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.detailUrl = `/it/ricette/${slugify(this.recipe.category)}/${slugify(\n      this.recipe.title\n    )}`;\n    this.imageSrc = getRemoteImages(this.recipe.imageName);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./recipe-item.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 16
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<a\n  class=\"list-group-item list-group-item-action flex-column align-items-start recipe-item\"\n  routerLinkActive=\"active\"\n  [routerLink]=\"[detailUrl]\"\n>\n  <div class=\"inner\">\n    <div class=\"img-wrapper\">\n      <img [src]=\"imageSrc\" alt=\"{{ recipe.title }}\" class=\"img-fluid\" />\n    </div>\n    <h4 class=\"list-group-item-heading\" [innerHtml]=\"recipe.title\"></h4>\n    <h5 [innerText]=\"recipe.category\"></h5>\n  </div>\n</a>\n"
        },
        {
            "name": "RecipesListComponent",
            "id": "component-RecipesListComponent-d8a581e8de35f12bc70b2d08e54fc45278468f195339ad3870ceb3a51e15f29627b81285085efc50cf42783af9a0fa68f612a03aebf8ddfde1ce2ca20ab37c3a",
            "file": "src/app/recipes-list/recipes-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-recipes-list",
            "styleUrls": [
                "./recipes-list.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./recipes-list.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "categories",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "fullRecipes",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Recipe[]",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isLoading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "page",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "pagedRecipes",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Recipe[]",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "pageSize",
                    "defaultValue": "12",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "recipes",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Recipe[]",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "searchForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "searchInput",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'searchInput'"
                        }
                    ]
                },
                {
                    "name": "searchQuery",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "selectedCategory",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "subs",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription[]",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "total",
                    "defaultValue": "10000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "categoryComparison",
                    "args": [
                        {
                            "name": "category",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "selectedCategory",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "\"active\" | \"\"",
                    "typeParameters": [],
                    "line": 173,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "category",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "selectedCategory",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "formInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 146,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getCurrentPagedRecipes",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 138,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 169,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onCategorySelect",
                    "args": [
                        {
                            "name": "category",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 158,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "category",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onPageChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 152,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "recipesFilter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 119,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setTitle",
                    "args": [
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'Sesamonero | Il tuo ricettario'"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 115,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'Sesamonero | Il tuo ricettario'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ElementRef,\n} from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { map, Subscription, take } from 'rxjs';\nimport { Recipe } from '../models/recipe.model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormControl, FormGroup } from '@angular/forms';\n\nimport * as fromApp from '../store/app.reducer';\nimport {\n  SetCurrentCategory,\n  SetCurrentSearch,\n  SetPage,\n} from '../store/general/general.actions';\nimport { slugify } from '../utils';\nimport { Meta, Title } from '@angular/platform-browser';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-recipes-list',\n  templateUrl: './recipes-list.component.html',\n  styleUrls: ['./recipes-list.component.scss'],\n})\nexport class RecipesListComponent implements OnInit, OnDestroy {\n  public isLoading = true;\n  public recipes: Recipe[] = [];\n  public fullRecipes: Recipe[] = [];\n  public pagedRecipes: Recipe[] = [];\n  public categories: string[];\n  public selectedCategory: string;\n  public page: number;\n  public pageSize = 12;\n  public total = 10000;\n  public searchForm: FormGroup;\n  public searchQuery: string;\n  private subs: Subscription[] = [];\n\n  @ViewChild('searchInput') searchInput: ElementRef;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private store: Store<fromApp.AppState>,\n    private titleService: Title,\n    private meta: Meta\n  ) {\n    this.page = 1;\n    this.meta.addTags([\n      { name: 'description', content: 'Il tuo ricettario' },\n      { name: 'og:site_name', content: 'Sesamonero' },\n      { name: 'og:type', content: 'food' },\n      {\n        name: 'og:url',\n        content: `${environment.siteDomain}/it/ricette/`,\n      },\n      { name: 'og:title', content: 'Sesamonero' },\n      { name: 'og:description', content: 'Il tuo ricettario' },\n    ]);\n  }\n\n  ngOnInit() {\n    this.setTitle();\n    this.formInit();\n\n    this.store\n      .select('general')\n      .pipe(take(1))\n      .subscribe((general) => {\n        this.searchQuery = general.currentSearch;\n        this.page = general.currentPage ? general.currentPage : 1;\n        this.searchForm.setValue({ searchInput: this.searchQuery });\n        this.recipesFilter();\n      });\n\n    this.subs = [\n      ...this.subs,\n      this.route.params.subscribe((params) => {\n        this.selectedCategory = params['category'] ? params['category'] : '';\n        this.store.dispatch(new SetCurrentCategory(this.selectedCategory));\n        if (this.selectedCategory) {\n          this.recipesFilter();\n        }\n        this.getCurrentPagedRecipes();\n      }),\n      this.store\n        .select('recipes')\n        .pipe(map((recipesState) => recipesState.recipes))\n        .subscribe((updatedRecipes: Recipe[]) => {\n          if (updatedRecipes.length !== this.fullRecipes.length) {\n            this.categories = updatedRecipes\n              .map((item) => item.category)\n              .filter((value, index, self) => {\n                return self.indexOf(value) === index;\n              });\n            this.isLoading = false;\n            this.fullRecipes = updatedRecipes;\n            this.recipesFilter();\n          }\n        }),\n    ];\n    this.searchForm\n      .get('searchInput')\n      .valueChanges.subscribe((selectedValue) => {\n        this.store.dispatch(new SetCurrentSearch(selectedValue));\n        this.searchQuery = selectedValue;\n        this.recipesFilter();\n      });\n  }\n\n  setTitle(title = 'Sesamonero | Il tuo ricettario') {\n    this.titleService.setTitle(`Sesamonero | Il tuo ricettario`);\n  }\n\n  recipesFilter(): void {\n    const re = new RegExp(this.searchQuery, 'i');\n    this.recipes = this.fullRecipes;\n    if (Boolean(this.searchQuery) || Boolean(this.selectedCategory)) {\n      this.recipes = this.fullRecipes.filter(\n        (recipe) =>\n          (recipe.title.match(re) ||\n            recipe.ingredients.some((ingredient) =>\n              ingredient.ingredient.match(re)\n            )) &&\n          (slugify(recipe.category) === this.selectedCategory ||\n            !Boolean(this.selectedCategory))\n      );\n    } else {\n      this.recipes = this.fullRecipes;\n    }\n    this.getCurrentPagedRecipes();\n  }\n\n  getCurrentPagedRecipes() {\n    this.pagedRecipes = this.recipes?.slice(\n      (this.page - 1) * this.pageSize,\n      this.page * this.pageSize\n    );\n    window.scrollTo(0, 0);\n  }\n\n  formInit(): void {\n    this.searchForm = new FormGroup({\n      searchInput: new FormControl(this.searchQuery),\n    });\n  }\n\n  onPageChange(event) {\n    this.page = event;\n    this.getCurrentPagedRecipes();\n    this.store.dispatch(new SetPage(this.page));\n  }\n\n  onCategorySelect(category: string): void {\n    this.onPageChange(1);\n    this.selectedCategory =\n      slugify(category) === this.selectedCategory ? '' : slugify(category);\n    this.store.dispatch(new SetCurrentCategory(this.selectedCategory));\n    this.router.navigate([`/it/ricette/${slugify(this.selectedCategory)}`], {\n      relativeTo: this.route,\n    });\n    this.recipesFilter();\n  }\n\n  ngOnDestroy(): void {\n    this.subs.forEach((sub) => sub.unsubscribe());\n  }\n\n  categoryComparison(category: string, selectedCategory: string) {\n    return slugify(category) === slugify(selectedCategory) ? 'active' : '';\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./recipes-list.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "store",
                        "type": "Store<fromApp.AppState>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "titleService",
                        "type": "Title",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "meta",
                        "type": "Meta",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 43,
                "jsdoctags": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "store",
                        "type": "Store<fromApp.AppState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "titleService",
                        "type": "Title",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "meta",
                        "type": "Meta",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<div class=\"row mb-2\">\n  <div class=\"col-12\">\n    <form [formGroup]=\"searchForm\">\n      <input\n        type=\"text\"\n        class=\"form-control search-input\"\n        id=\"searchInput\"\n        aria-describedby=\"Ricerca ricette\"\n        autocomplete=\"off\"\n        autofill=\"off\"\n        placeholder=\"Cerca una ricetta\"\n        formControlName=\"searchInput\"\n        #searchInput\n      />\n    </form>\n  </div>\n  <div class=\"col-12\">\n    <ul class=\"list-group list-group-horizontal category-list\">\n      <li\n        class=\"category-item py-1 py-sm-2\"\n        *ngFor=\"let category of categories\"\n      >\n        <a\n          (click)=\"onCategorySelect(category)\"\n          [ngClass]=\"categoryComparison(category, selectedCategory)\"\n          class=\"badge badge-secondary badge-pill\"\n          [innerHtml]=\"category\"\n        ></a>\n      </li>\n    </ul>\n  </div>\n</div>\n<div class=\"row\">\n  <div class=\"col-12 text-center\" *ngIf=\"isLoading\">\n    <div class=\"spinner-border\" role=\"status\">\n      <span class=\"sr-only\">Loading...</span>\n    </div>\n  </div>\n  <div class=\"col-12 text-center\" *ngIf=\"!isLoading && recipes.length == 0\">\n    <h3>Non ci sono ricette coi tui criteri di ricerca</h3>\n  </div>\n  <div class=\"col-12\" *ngIf=\"recipes.length > 0\">\n    <div class=\"list-group recipes-list mb-5 flex-row flex-wrap\">\n      <app-recipe-item\n        *ngFor=\"let recipeEl of pagedRecipes\"\n        [recipe]=\"recipeEl\"\n      ></app-recipe-item>\n    </div>\n    <ngb-pagination\n      *ngIf=\"recipes.length > pageSize\"\n      [collectionSize]=\"recipes.length\"\n      [pageSize]=\"pageSize\"\n      [maxSize]=\"6\"\n      [rotate]=\"true\"\n      [(page)]=\"page\"\n      aria-label=\"Default pagination\"\n      (pageChange)=\"onPageChange($event)\"\n    ></ngb-pagination>\n  </div>\n</div>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-1e07383d98b83fd3b8d8b4ddb61597753436815860f606c934983299fd8c87e955a983e1acc0e66ce4c06e26d54894d1cbc5819e70d2d3612aca76d33efee738",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { StoreModule } from '@ngrx/store';\nimport { HttpClientModule } from '@angular/common/http';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { EffectsModule } from '@ngrx/effects';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { RecipesListComponent } from './recipes-list/recipes-list.component';\nimport { RecipeEffects } from './store/recipes/recipe.effects';\nimport { environment } from 'src/environments/environment';\nimport { RecipeItemComponent } from './recipe-item/recipe-item.component';\nimport { RecipeDetailComponent } from './recipe-detail/recipe-detail.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CoreModule } from './core.module';\nimport * as fromApp from './store/app.reducer';\nimport { Nl2brPipe } from './pipes/nl2br.pipe';\nimport { RemoveBracketsPipe } from './pipes/removeBrackets.pipe';\n\n// import { initializeApp } from 'firebase/app';\n@NgModule({\n  declarations: [\n    AppComponent,\n    RecipesListComponent,\n    RecipeItemComponent,\n    RecipeDetailComponent,\n    Nl2brPipe,\n    RemoveBracketsPipe,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    StoreModule.forRoot(fromApp.appReducer),\n    EffectsModule.forRoot([RecipeEffects]),\n    StoreDevtoolsModule.instrument({ logOnly: environment.production }),\n    CoreModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "Nl2brPipe"
                        },
                        {
                            "name": "RecipeDetailComponent"
                        },
                        {
                            "name": "RecipeItemComponent"
                        },
                        {
                            "name": "RecipesListComponent"
                        },
                        {
                            "name": "RemoveBracketsPipe"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "CoreModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-1884a53f3caab4a3a0e569c81a2f22be94a0b8413052115f38f0de9927e1782e6e049c4852d674c365172b94d42bd1357f95b2c837831c9e2f13fae14db3a3db",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { RecipeDetailComponent } from './recipe-detail/recipe-detail.component';\nimport { RecipesListComponent } from './recipes-list/recipes-list.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/it/ricette', pathMatch: 'full' },\n  {\n    path: 'it/ricette',\n    children: [\n      {\n        path: '',\n        component: RecipesListComponent,\n      },\n      // {\n      //   path: ':pageNumber',\n      //   component: RecipesListComponent,\n      // },\n      {\n        path: ':category',\n        component: RecipesListComponent,\n      },\n      {\n        path: ':category/:id',\n        component: RecipeDetailComponent,\n      },\n    ],\n  },\n  { path: '**', redirectTo: '/it/ricette', pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { scrollPositionRestoration: 'top' })],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CoreModule",
            "id": "module-CoreModule-7c749aaf193017d84462b229e3d8fc735233c6d3c00c62db3eb5944094b2a8b2f50786f89f182e3cf2c171d2312e92fe756c898cf2d3f361150425300dd39d16",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/core.module.ts",
            "methods": [],
            "sourceCode": "import { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\n\nimport { AuthInterceptorService } from './services/app-interceptor.service';\n\n@NgModule({\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptorService,\n      multi: true,\n    },\n  ],\n})\nexport class CoreModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "AuthInterceptorService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "ADD_RECIPE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/recipes/recipe.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'[Recipes] Add Recipe'"
            },
            {
                "name": "ANONYMOUS_LOGIN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/recipes/recipe.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'[Recipes] Anonymous Login'"
            },
            {
                "name": "appReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/app.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ActionReducerMap<AppState>",
                "defaultValue": "{\n  general: fromGeneral.generalReducer,\n  recipes: fromRecipes.recipeReducer,\n  token: fromAuth.authReducer,\n}"
            },
            {
                "name": "AUTHENTICATE_FAIL",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/recipes/recipe.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'[Recipes] Authenticate Fail'"
            },
            {
                "name": "baseApi",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/recipes/recipe.effects.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'https://ng-course-recipe-book-a8fae-default-rtdb.firebaseio.com'"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/recipe-detail/recipe-detail.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n  props: {\n    label: 'RecipeDetailComponent',\n    imageName: 'Cheese_Cake.jpg',\n    recipe: {\n      author: {\n        email: 'dave.catani@gmail.com',\n        id: '1',\n        name: 'Davide Catani',\n      },\n      category: 'Frutta e dolci',\n      cookingTime: '30 minuti',\n      date: '2017-02-26 20:50:13',\n      description:\n        \"Sciogliere il burro in un pentolino.\\nTritare i biscotti e unire il tutto.\\nVersare in una teglia e formare una base compatta e uniforme.\\nFrullare il resto degli ingredienti e versarli sopra la base di biscotti.\\nCuocere in forno per mezz'ora circa a 180° finchè non diventa solida.\\nLasciar sfreddare e ricoprire di marmellata.\\n\",\n      difficulty: 'facile',\n      id: '240',\n      imageName: 'Cheese_Cake.jpg',\n      ingredients: [\n        {\n          ingredient: 'Mascarpone',\n          quantity: '250',\n          unityOfMeasure: 'gr',\n        },\n        {\n          ingredient: 'Ricotta',\n          quantity: '250',\n          unityOfMeasure: 'gr',\n        },\n        {\n          ingredient: 'Vanillina',\n          quantity: '1',\n          unityOfMeasure: 'bustina',\n        },\n        {\n          ingredient: 'Zucchero',\n          quantity: '80',\n          unityOfMeasure: 'gr',\n        },\n        {\n          ingredient: 'Uova',\n          quantity: '3',\n        },\n        {\n          ingredient: 'Marmellata',\n          note: 'preferibilmente rossa',\n          quantity: '1 e mezzo',\n          unityOfMeasure: 'barattolo',\n        },\n        {\n          ingredient: 'Biscotti',\n          note: 'Tipo Rigoli Mulino Bianco',\n          quantity: '240',\n          unityOfMeasure: 'gr',\n        },\n        {\n          ingredient: 'Farina',\n          quantity: '1/5',\n          unityOfMeasure: 'cucchiaio',\n        },\n        {\n          ingredient: 'Burro',\n          quantity: '125',\n          unityOfMeasure: 'gr',\n        },\n      ],\n      intro: 'Un dolce buonissimo, semplice e veloce da preparare.',\n      portions: '6',\n      preparationTime: '20 minuti',\n      title: 'Cheese cake',\n    },\n  },\n})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/recipe-item/recipe-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "() => ({\n  props: {\n    label: 'RecipeItemComponent',\n    recipe: {\n      author: {\n        email: 'dave.catani@gmail.com',\n        id: '1',\n        name: 'Davide Catani',\n      },\n      category: 'Frutta e dolci',\n      cookingTime: '30 minuti',\n      date: '2017-02-26 20:50:13',\n      description:\n        \"Sciogliere il burro in un pentolino.\\nTritare i biscotti e unire il tutto.\\nVersare in una teglia e formare una base compatta e uniforme.\\nFrullare il resto degli ingredienti e versarli sopra la base di biscotti.\\nCuocere in forno per mezz'ora circa a 180° finchè non diventa solida.\\nLasciar sfreddare e ricoprire di marmellata.\\n\",\n      difficulty: 'facile',\n      id: '240',\n      imageName: 'Cheese_Cake.jpg',\n      ingredients: [\n        {\n          ingredient: 'Mascarpone',\n          quantity: '250',\n          unityOfMeasure: 'gr',\n        },\n        {\n          ingredient: 'Ricotta',\n          quantity: '250',\n          unityOfMeasure: 'gr',\n        },\n        {\n          ingredient: 'Vanillina',\n          quantity: '1',\n          unityOfMeasure: 'bustina',\n        },\n        {\n          ingredient: 'Zucchero',\n          quantity: '80',\n          unityOfMeasure: 'gr',\n        },\n        {\n          ingredient: 'Uova',\n          quantity: '3',\n        },\n        {\n          ingredient: 'Marmellata',\n          note: 'preferibilmente rossa',\n          quantity: '1 e mezzo',\n          unityOfMeasure: 'barattolo',\n        },\n        {\n          ingredient: 'Biscotti',\n          note: 'Tipo Rigoli Mulino Bianco',\n          quantity: '240',\n          unityOfMeasure: 'gr',\n        },\n        {\n          ingredient: 'Farina',\n          quantity: '1/5',\n          unityOfMeasure: 'cucchiaio',\n        },\n        {\n          ingredient: 'Burro',\n          quantity: '125',\n          unityOfMeasure: 'gr',\n        },\n      ],\n      intro: 'Un dolce buonissimo, semplice e veloce da preparare.',\n      portions: '6',\n      preparationTime: '20 minuti',\n      title: 'Cheese cake',\n    },\n  },\n})"
            },
            {
                "name": "DELETE_RECIPE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/recipes/recipe.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'[Recipes] Delete Recipe'"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true,\n  siteDomain: 'https://www.sesamonero.com',\n  firebaseApiKey: 'AIzaSyDGzQkVIsbmwRNwUMRrbh0Vmp6zWUwLBTQ',\n  firebase: {\n    apiKey: 'AIzaSyDGzQkVIsbmwRNwUMRrbh0Vmp6zWUwLBTQ',\n    authDomain: 'ng-course-recipe-book-a8fae.firebaseapp.com',\n    databaseURL:\n      'https://ng-course-recipe-book-a8fae-default-rtdb.firebaseio.com',\n    projectId: 'ng-course-recipe-book-a8fae',\n    storageBucket: 'ng-course-recipe-book-a8fae.firebaseapp.com',\n  },\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  siteDomain: 'https://www.sesamonero.com',\n  firebaseApiKey: 'AIzaSyDGzQkVIsbmwRNwUMRrbh0Vmp6zWUwLBTQ',\n  firebase: {\n    apiKey: 'AIzaSyDGzQkVIsbmwRNwUMRrbh0Vmp6zWUwLBTQ',\n    authDomain: 'ng-course-recipe-book-a8fae.firebaseapp.com',\n    databaseURL:\n      'https://ng-course-recipe-book-a8fae-default-rtdb.firebaseio.com',\n    projectId: 'ng-course-recipe-book-a8fae',\n    storageBucket: 'ng-course-recipe-book-a8fae.appspot.com',\n  },\n}"
            },
            {
                "name": "FETCH_RECIPES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/recipes/recipe.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'[Recipes] Fetch Recipes'"
            },
            {
                "name": "format_time",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(s) => {\n  const dtFormat = new Intl.DateTimeFormat('en-GB', {\n    timeStyle: 'medium',\n    timeZone: 'UTC',\n  });\n\n  return dtFormat.format(new Date(s * 1e3));\n}"
            },
            {
                "name": "getLocalImages",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(fileName: string) => {\n  return `${environment.siteDomain}/assets/images/${encodeURIComponent(\n    fileName\n  )}`;\n}"
            },
            {
                "name": "getRemoteImages",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(fileName: string) => {\n  return `https://storage.googleapis.com/sesamonero-images/${encodeURIComponent(\n    fileName\n  )}`;\n}"
            },
            {
                "name": "gtag",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Function"
            },
            {
                "name": "handleError",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/recipes/recipe.effects.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(errorRes: any) => {\n  let errorMessage = Boolean(errorMessages[errorRes.error.error.message])\n    ? errorMessages[errorRes.error.error.message]\n    : 'An unknown error occurred!';\n  return of(new RecipesActions.AuthenticateFail(errorMessage));\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/auth/auth.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "State",
                "defaultValue": "{\n  token: null,\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/general/general.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "State",
                "defaultValue": "{\n  currentPage: null,\n  currentSearch: '',\n  currentCategory: '',\n}"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/recipes/recipe.reducer.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "State",
                "defaultValue": "{\n  recipes: [],\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SET_CURRENT_CATEGORY",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/general/general.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'[Recipes] Set Current Category'"
            },
            {
                "name": "SET_CURRENT_SEARCH",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/general/general.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'[Recipes] Set Current Search'"
            },
            {
                "name": "SET_PAGE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/general/general.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'[Recipes] Set Page'"
            },
            {
                "name": "SET_RECIPES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/recipes/recipe.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'[Recipes] Set Recipes'"
            },
            {
                "name": "SET_TOKEN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/recipes/recipe.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'[Recipes] Set Token'"
            },
            {
                "name": "slugify",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/utils.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(string) => {\n  const a =\n    'àáâäæãåāăąçćčđďèéêëēėęěğǵḧîïíīįìıİłḿñńǹňôöòóœøōõőṕŕřßśšşșťțûüùúūǘůűųẃẍÿýžźż·/_,:;';\n  const b =\n    'aaaaaaaaaacccddeeeeeeeegghiiiiiiiilmnnnnoooooooooprrsssssttuuuuuuuuuwxyyzzz------';\n  const p = new RegExp(a.split('').join('|'), 'g');\n\n  return string\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, '-') // Replace spaces with -\n    .replace(p, (c) => b.charAt(a.indexOf(c))) // Replace special characters\n    .replace(/&/g, '-and-') // Replace & with 'and'\n    .replace(/[^\\w\\-]+/g, '') // Remove all non-word characters\n    .replace(/\\-\\-+/g, '-') // Replace multiple - with single -\n    .replace(/^-+/, '') // Trim - from start of text\n    .replace(/-+$/, ''); // Trim - from end of text\n}"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "STORE_RECIPES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/recipes/recipe.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'[Recipes] Store Recipes'"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  props: args,\n})"
            },
            {
                "name": "UPDATE_RECIPE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/store/recipes/recipe.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'[Recipes] Update Recipe'"
            }
        ],
        "functions": [
            {
                "name": "authReducer",
                "file": "src/app/store/auth/auth.reducer.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "state",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "initialState"
                    },
                    {
                        "name": "action",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "State",
                "jsdoctags": [
                    {
                        "name": "state",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "initialState",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "action",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "generalReducer",
                "file": "src/app/store/general/general.reducer.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "state",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "initialState"
                    },
                    {
                        "name": "action",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "State",
                "jsdoctags": [
                    {
                        "name": "state",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "initialState",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "action",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "recipeReducer",
                "file": "src/app/store/recipes/recipe.reducer.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "state",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "initialState"
                    },
                    {
                        "name": "action",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "State",
                "jsdoctags": [
                    {
                        "name": "state",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "defaultValue": "initialState",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "action",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "GeneralActions",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "SetPage | SetCurrentSearch | SetCurrentCategory",
                "file": "src/app/store/general/general.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "RecipesActions",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "SetRecipes | FetchRecipes | AnonymousLogin | AuthenticateFail | SetToken",
                "file": "src/app/store/recipes/recipe.actions.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            }
        ],
        "enumerations": [
            {
                "name": "errorMessages",
                "childs": [
                    {
                        "name": "EMAIL_EXISTS",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "The email address is already in use by another account"
                    },
                    {
                        "name": "OPERATION_NOT_ALLOWED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "Password sign-in is disabled for this project"
                    },
                    {
                        "name": "TOO_MANY_ATTEMPTS_TRY_LATER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "We have blocked all requests from this device due to unusual activity. Try again later"
                    },
                    {
                        "name": "EMAIL_NOT_FOUND",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "There is no user record corresponding to this identifier.The user may have been deleted"
                    },
                    {
                        "name": "INVALID_PASSWORD",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "The password is invalid or the user does not have a password"
                    },
                    {
                        "name": "USER_DISABLED",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "The user account has been disabled by an administrator"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/store/recipes/recipe.effects.ts"
            }
        ],
        "groupedVariables": {
            "src/app/store/recipes/recipe.actions.ts": [
                {
                    "name": "ADD_RECIPE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/recipes/recipe.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'[Recipes] Add Recipe'"
                },
                {
                    "name": "ANONYMOUS_LOGIN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/recipes/recipe.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'[Recipes] Anonymous Login'"
                },
                {
                    "name": "AUTHENTICATE_FAIL",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/recipes/recipe.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'[Recipes] Authenticate Fail'"
                },
                {
                    "name": "DELETE_RECIPE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/recipes/recipe.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'[Recipes] Delete Recipe'"
                },
                {
                    "name": "FETCH_RECIPES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/recipes/recipe.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'[Recipes] Fetch Recipes'"
                },
                {
                    "name": "SET_RECIPES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/recipes/recipe.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'[Recipes] Set Recipes'"
                },
                {
                    "name": "SET_TOKEN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/recipes/recipe.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'[Recipes] Set Token'"
                },
                {
                    "name": "STORE_RECIPES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/recipes/recipe.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'[Recipes] Store Recipes'"
                },
                {
                    "name": "UPDATE_RECIPE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/recipes/recipe.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'[Recipes] Update Recipe'"
                }
            ],
            "src/app/store/app.reducer.ts": [
                {
                    "name": "appReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/app.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ActionReducerMap<AppState>",
                    "defaultValue": "{\n  general: fromGeneral.generalReducer,\n  recipes: fromRecipes.recipeReducer,\n  token: fromAuth.authReducer,\n}"
                }
            ],
            "src/app/store/recipes/recipe.effects.ts": [
                {
                    "name": "baseApi",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/recipes/recipe.effects.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'https://ng-course-recipe-book-a8fae-default-rtdb.firebaseio.com'"
                },
                {
                    "name": "handleError",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/recipes/recipe.effects.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(errorRes: any) => {\n  let errorMessage = Boolean(errorMessages[errorRes.error.error.message])\n    ? errorMessages[errorRes.error.error.message]\n    : 'An unknown error occurred!';\n  return of(new RecipesActions.AuthenticateFail(errorMessage));\n}"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/app/recipe-detail/recipe-detail.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/recipe-detail/recipe-detail.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n  props: {\n    label: 'RecipeDetailComponent',\n    imageName: 'Cheese_Cake.jpg',\n    recipe: {\n      author: {\n        email: 'dave.catani@gmail.com',\n        id: '1',\n        name: 'Davide Catani',\n      },\n      category: 'Frutta e dolci',\n      cookingTime: '30 minuti',\n      date: '2017-02-26 20:50:13',\n      description:\n        \"Sciogliere il burro in un pentolino.\\nTritare i biscotti e unire il tutto.\\nVersare in una teglia e formare una base compatta e uniforme.\\nFrullare il resto degli ingredienti e versarli sopra la base di biscotti.\\nCuocere in forno per mezz'ora circa a 180° finchè non diventa solida.\\nLasciar sfreddare e ricoprire di marmellata.\\n\",\n      difficulty: 'facile',\n      id: '240',\n      imageName: 'Cheese_Cake.jpg',\n      ingredients: [\n        {\n          ingredient: 'Mascarpone',\n          quantity: '250',\n          unityOfMeasure: 'gr',\n        },\n        {\n          ingredient: 'Ricotta',\n          quantity: '250',\n          unityOfMeasure: 'gr',\n        },\n        {\n          ingredient: 'Vanillina',\n          quantity: '1',\n          unityOfMeasure: 'bustina',\n        },\n        {\n          ingredient: 'Zucchero',\n          quantity: '80',\n          unityOfMeasure: 'gr',\n        },\n        {\n          ingredient: 'Uova',\n          quantity: '3',\n        },\n        {\n          ingredient: 'Marmellata',\n          note: 'preferibilmente rossa',\n          quantity: '1 e mezzo',\n          unityOfMeasure: 'barattolo',\n        },\n        {\n          ingredient: 'Biscotti',\n          note: 'Tipo Rigoli Mulino Bianco',\n          quantity: '240',\n          unityOfMeasure: 'gr',\n        },\n        {\n          ingredient: 'Farina',\n          quantity: '1/5',\n          unityOfMeasure: 'cucchiaio',\n        },\n        {\n          ingredient: 'Burro',\n          quantity: '125',\n          unityOfMeasure: 'gr',\n        },\n      ],\n      intro: 'Un dolce buonissimo, semplice e veloce da preparare.',\n      portions: '6',\n      preparationTime: '20 minuti',\n      title: 'Cheese cake',\n    },\n  },\n})"
                }
            ],
            "src/app/recipe-item/recipe-item.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/recipe-item/recipe-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "() => ({\n  props: {\n    label: 'RecipeItemComponent',\n    recipe: {\n      author: {\n        email: 'dave.catani@gmail.com',\n        id: '1',\n        name: 'Davide Catani',\n      },\n      category: 'Frutta e dolci',\n      cookingTime: '30 minuti',\n      date: '2017-02-26 20:50:13',\n      description:\n        \"Sciogliere il burro in un pentolino.\\nTritare i biscotti e unire il tutto.\\nVersare in una teglia e formare una base compatta e uniforme.\\nFrullare il resto degli ingredienti e versarli sopra la base di biscotti.\\nCuocere in forno per mezz'ora circa a 180° finchè non diventa solida.\\nLasciar sfreddare e ricoprire di marmellata.\\n\",\n      difficulty: 'facile',\n      id: '240',\n      imageName: 'Cheese_Cake.jpg',\n      ingredients: [\n        {\n          ingredient: 'Mascarpone',\n          quantity: '250',\n          unityOfMeasure: 'gr',\n        },\n        {\n          ingredient: 'Ricotta',\n          quantity: '250',\n          unityOfMeasure: 'gr',\n        },\n        {\n          ingredient: 'Vanillina',\n          quantity: '1',\n          unityOfMeasure: 'bustina',\n        },\n        {\n          ingredient: 'Zucchero',\n          quantity: '80',\n          unityOfMeasure: 'gr',\n        },\n        {\n          ingredient: 'Uova',\n          quantity: '3',\n        },\n        {\n          ingredient: 'Marmellata',\n          note: 'preferibilmente rossa',\n          quantity: '1 e mezzo',\n          unityOfMeasure: 'barattolo',\n        },\n        {\n          ingredient: 'Biscotti',\n          note: 'Tipo Rigoli Mulino Bianco',\n          quantity: '240',\n          unityOfMeasure: 'gr',\n        },\n        {\n          ingredient: 'Farina',\n          quantity: '1/5',\n          unityOfMeasure: 'cucchiaio',\n        },\n        {\n          ingredient: 'Burro',\n          quantity: '125',\n          unityOfMeasure: 'gr',\n        },\n      ],\n      intro: 'Un dolce buonissimo, semplice e veloce da preparare.',\n      portions: '6',\n      preparationTime: '20 minuti',\n      title: 'Cheese cake',\n    },\n  },\n})"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true,\n  siteDomain: 'https://www.sesamonero.com',\n  firebaseApiKey: 'AIzaSyDGzQkVIsbmwRNwUMRrbh0Vmp6zWUwLBTQ',\n  firebase: {\n    apiKey: 'AIzaSyDGzQkVIsbmwRNwUMRrbh0Vmp6zWUwLBTQ',\n    authDomain: 'ng-course-recipe-book-a8fae.firebaseapp.com',\n    databaseURL:\n      'https://ng-course-recipe-book-a8fae-default-rtdb.firebaseio.com',\n    projectId: 'ng-course-recipe-book-a8fae',\n    storageBucket: 'ng-course-recipe-book-a8fae.firebaseapp.com',\n  },\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  siteDomain: 'https://www.sesamonero.com',\n  firebaseApiKey: 'AIzaSyDGzQkVIsbmwRNwUMRrbh0Vmp6zWUwLBTQ',\n  firebase: {\n    apiKey: 'AIzaSyDGzQkVIsbmwRNwUMRrbh0Vmp6zWUwLBTQ',\n    authDomain: 'ng-course-recipe-book-a8fae.firebaseapp.com',\n    databaseURL:\n      'https://ng-course-recipe-book-a8fae-default-rtdb.firebaseio.com',\n    projectId: 'ng-course-recipe-book-a8fae',\n    storageBucket: 'ng-course-recipe-book-a8fae.appspot.com',\n  },\n}"
                }
            ],
            "src/app/utils.ts": [
                {
                    "name": "format_time",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(s) => {\n  const dtFormat = new Intl.DateTimeFormat('en-GB', {\n    timeStyle: 'medium',\n    timeZone: 'UTC',\n  });\n\n  return dtFormat.format(new Date(s * 1e3));\n}"
                },
                {
                    "name": "getLocalImages",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(fileName: string) => {\n  return `${environment.siteDomain}/assets/images/${encodeURIComponent(\n    fileName\n  )}`;\n}"
                },
                {
                    "name": "getRemoteImages",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(fileName: string) => {\n  return `https://storage.googleapis.com/sesamonero-images/${encodeURIComponent(\n    fileName\n  )}`;\n}"
                },
                {
                    "name": "slugify",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/utils.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(string) => {\n  const a =\n    'àáâäæãåāăąçćčđďèéêëēėęěğǵḧîïíīįìıİłḿñńǹňôöòóœøōõőṕŕřßśšşșťțûüùúūǘůűųẃẍÿýžźż·/_,:;';\n  const b =\n    'aaaaaaaaaacccddeeeeeeeegghiiiiiiiilmnnnnoooooooooprrsssssttuuuuuuuuuwxyyzzz------';\n  const p = new RegExp(a.split('').join('|'), 'g');\n\n  return string\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, '-') // Replace spaces with -\n    .replace(p, (c) => b.charAt(a.indexOf(c))) // Replace special characters\n    .replace(/&/g, '-and-') // Replace & with 'and'\n    .replace(/[^\\w\\-]+/g, '') // Remove all non-word characters\n    .replace(/\\-\\-+/g, '-') // Replace multiple - with single -\n    .replace(/^-+/, '') // Trim - from start of text\n    .replace(/-+$/, ''); // Trim - from end of text\n}"
                }
            ],
            "src/app/app.component.ts": [
                {
                    "name": "gtag",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Function"
                }
            ],
            "src/app/store/auth/auth.reducer.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/auth/auth.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "State",
                    "defaultValue": "{\n  token: null,\n}"
                }
            ],
            "src/app/store/general/general.reducer.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/general/general.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "State",
                    "defaultValue": "{\n  currentPage: null,\n  currentSearch: '',\n  currentCategory: '',\n}"
                }
            ],
            "src/app/store/recipes/recipe.reducer.ts": [
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/recipes/recipe.reducer.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "State",
                    "defaultValue": "{\n  recipes: [],\n}"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  props: args,\n})"
                }
            ],
            "src/app/store/general/general.actions.ts": [
                {
                    "name": "SET_CURRENT_CATEGORY",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/general/general.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'[Recipes] Set Current Category'"
                },
                {
                    "name": "SET_CURRENT_SEARCH",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/general/general.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'[Recipes] Set Current Search'"
                },
                {
                    "name": "SET_PAGE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/store/general/general.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'[Recipes] Set Page'"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/store/auth/auth.reducer.ts": [
                {
                    "name": "authReducer",
                    "file": "src/app/store/auth/auth.reducer.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "state",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "initialState"
                        },
                        {
                            "name": "action",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "State",
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "initialState",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/store/general/general.reducer.ts": [
                {
                    "name": "generalReducer",
                    "file": "src/app/store/general/general.reducer.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "state",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "initialState"
                        },
                        {
                            "name": "action",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "State",
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "initialState",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/store/recipes/recipe.reducer.ts": [
                {
                    "name": "recipeReducer",
                    "file": "src/app/store/recipes/recipe.reducer.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "state",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "initialState"
                        },
                        {
                            "name": "action",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "State",
                    "jsdoctags": [
                        {
                            "name": "state",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "initialState",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "action",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {
            "src/app/store/recipes/recipe.effects.ts": [
                {
                    "name": "errorMessages",
                    "childs": [
                        {
                            "name": "EMAIL_EXISTS",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "The email address is already in use by another account"
                        },
                        {
                            "name": "OPERATION_NOT_ALLOWED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "Password sign-in is disabled for this project"
                        },
                        {
                            "name": "TOO_MANY_ATTEMPTS_TRY_LATER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "We have blocked all requests from this device due to unusual activity. Try again later"
                        },
                        {
                            "name": "EMAIL_NOT_FOUND",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "There is no user record corresponding to this identifier.The user may have been deleted"
                        },
                        {
                            "name": "INVALID_PASSWORD",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "The password is invalid or the user does not have a password"
                        },
                        {
                            "name": "USER_DISABLED",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "The user account has been disabled by an administrator"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/store/recipes/recipe.effects.ts"
                }
            ]
        },
        "groupedTypeAliases": {
            "src/app/store/general/general.actions.ts": [
                {
                    "name": "GeneralActions",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "SetPage | SetCurrentSearch | SetCurrentCategory",
                    "file": "src/app/store/general/general.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "src/app/store/recipes/recipe.actions.ts": [
                {
                    "name": "RecipesActions",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "SetRecipes | FetchRecipes | AnonymousLogin | AuthenticateFail | SetToken",
                    "file": "src/app/store/recipes/recipe.actions.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "",
                        "redirectTo": "/it/ricette",
                        "pathMatch": "full"
                    },
                    {
                        "path": "it/ricette",
                        "children": [
                            {
                                "path": "",
                                "component": "RecipesListComponent"
                            },
                            {
                                "path": ":category",
                                "component": "RecipesListComponent"
                            },
                            {
                                "path": ":category/:id",
                                "component": "RecipeDetailComponent"
                            }
                        ]
                    },
                    {
                        "path": "**",
                        "redirectTo": "/it/ricette",
                        "pathMatch": "full"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "gtag",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/models/file-upload.ts",
                "type": "class",
                "linktype": "classe",
                "name": "FileUpload",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/models/recipe.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Recipe",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/models/recipe.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Author",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/models/recipe.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Ingredient",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/pipes/nl2br.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "Nl2brPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pipes/removeBrackets.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "RemoveBracketsPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/recipe-detail/recipe-detail.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RecipeDetailComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/recipe-detail/recipe-detail.stories.ts",
                "type": "class",
                "linktype": "classe",
                "name": "MockActivatedRoute",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/recipe-detail/recipe-detail.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/recipe-item/recipe-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RecipeItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/recipe-item/recipe-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/recipes-list/recipes-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RecipesListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/24",
                "status": "low"
            },
            {
                "filePath": "src/app/services/app-interceptor.service.ts",
                "type": "interceptor",
                "linktype": "interceptor",
                "name": "AuthInterceptorService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/services/recipes.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "RecipesService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app.reducer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AppState",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/app.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/auth/auth.reducer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "State",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/store/auth/auth.reducer.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "authReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/auth/auth.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/general/general.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "SetCurrentCategory",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/general/general.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "SetCurrentSearch",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/general/general.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "SetPage",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/general/general.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SET_CURRENT_CATEGORY",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/general/general.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SET_CURRENT_SEARCH",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/general/general.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SET_PAGE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/general/general.reducer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "State",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/general/general.reducer.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "generalReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/general/general.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/recipes/recipe.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AnonymousLogin",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/store/recipes/recipe.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AuthenticateFail",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/recipes/recipe.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "FetchRecipes",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/store/recipes/recipe.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "SetRecipes",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/recipes/recipe.actions.ts",
                "type": "class",
                "linktype": "classe",
                "name": "SetToken",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/store/recipes/recipe.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ADD_RECIPE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/recipes/recipe.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ANONYMOUS_LOGIN",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/recipes/recipe.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AUTHENTICATE_FAIL",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/recipes/recipe.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DELETE_RECIPE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/recipes/recipe.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FETCH_RECIPES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/recipes/recipe.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SET_RECIPES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/recipes/recipe.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SET_TOKEN",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/recipes/recipe.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "STORE_RECIPES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/recipes/recipe.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "UPDATE_RECIPE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/recipes/recipe.effects.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "RecipeEffects",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/store/recipes/recipe.effects.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AuthResponseData",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/store/recipes/recipe.effects.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "baseApi",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/recipes/recipe.effects.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "handleError",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/recipes/recipe.reducer.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "State",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/store/recipes/recipe.reducer.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "recipeReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/store/recipes/recipe.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "format_time",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getLocalImages",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getRemoteImages",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/utils.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "slugify",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}